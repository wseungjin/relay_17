{"version":3,"sources":["constants/url.js","util/ReqMessage.jsx","views/LoginPage.jsx","components/ChatBot/WordCloud.jsx","components/ChatBot/ChatBot.jsx","views/MainPage.jsx","views/ErrorPage.jsx","App.jsx","index.jsx"],"names":["URL","login","userInfoAll","userInfo","chatbot","postLogin","params","axios","post","then","response","data","catch","error","getChatBot","message","get","Wrapper","styled","div","LoginBox","LoginHeader","Input","input","ErrorMsg","p","Button","button","LoginPage","history","useHistory","useState","name","setName","school","setSchool","graduatedYear","setGraduatedYear","favors","setFavors","errMsg","setErrMsg","onSubmit","a","push","type","placeholder","onChange","target","value","onClick","MessageBox","props","isUser","Message","WordCloud","user","text","isOpen","TitleBox","ChatbotTitle","TitleButton","ContextWrap","ContextBody","InputBox","MessageInput","InputButton","ChatBot","onSetChatbotOpen","setMessage","messageList","setMessageList","isResponsed","setIsResponsed","onPassMessage","contextBody","document","getElementById","scrollTop","scrollHeight","wordCloudList","map","index","key","id","onKeyDown","e","keyCode","disabled","MainBody","MainLeft","Profile","SchoolList","MainCenter","MainRight","MainFooter","ChatBotButton","MainPage","userName","useParams","chatbotOpen","setChatbotOpen","setUserInfo","getUserHandler","useEffect","ErrorPage","src","alt","style","width","App","path","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.61f35772.chunk.js","sourcesContent":["export default URL = {\n  login: \"http://101.101.217.174/users/insert\",\n  userInfoAll: \"http://101.101.217.174/users\",\n  userInfo: \"http://101.101.217.174/users\",\n  chatbot: \"http://101.101.217.174/chatbot\",\n};\n","import axios from \"axios\";\nimport URL from \"../constants/url.js\";\n\nexport const postLogin = (params) => {\n  axios\n    .post(URL.login, params)\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error) => {\n      return error;\n    });\n};\n\nexport const getUserAll = () => {\n  return axios\n    .get(URL.userInfoAll)\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error) => {\n      return error;\n    });\n};\n\nexport const getUser = (name) => {\n  return axios\n    .get(`${URL.userInfo}/${name}`)\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error) => {\n      return error;\n    });\n};\n\nexport const getChatBot = (message) => {\n  return axios\n    .get(`${URL.chatbot}/${message}`)\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error) => {\n      return error;\n    });\n};\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { postLogin } from \"../util/ReqMessage\";\n\nconst LoginPage = () => {\n  let history = useHistory();\n\n  const [name, setName] = useState(\"\");\n  const [school, setSchool] = useState(\"\");\n  const [graduatedYear, setGraduatedYear] = useState(0);\n  const [favors, setFavors] = useState(\"\");\n  const [errMsg, setErrMsg] = useState(\"\");\n\n  const onSetName = ({ target }) => {\n    setName(target.value);\n  };\n\n  const onSetSchool = ({ target }) => {\n    setSchool(target.value);\n  };\n\n  const onSetGraduatedYear = ({ target }) => {\n    setGraduatedYear(target.value);\n    if (target.value < 1500 || target.value > 2100) setErrMsg(\"졸업년도를 정확히 입력해주세요\");\n    else setErrMsg(\"\");\n  };\n\n  const onSetFavors = ({ target }) => {\n    setFavors(target.value);\n  };\n\n  const onSubmit = async () => {\n    if (!(name && school && graduatedYear && favors)) {\n      setErrMsg(\"이름, 학교, 졸업년도, 관심사를 모두 입력해주세요.\");\n      return;\n    }\n\n    if (errMsg) return;\n    const params = { name: name, school: school, favors: favors, graduatedYear: graduatedYear };\n    await postLogin(params);\n    history.push(`/MainPage/${name}`);\n  };\n\n  return (\n    <Wrapper>\n      <h1>I Loved School Logo</h1>\n      <LoginBox>\n        <LoginHeader>\n          <h1>로그인</h1>\n          <p>안녕하세요, I Loved School 입니다.</p>\n        </LoginHeader>\n        <Input type=\"text\" name=\"name\" placeholder=\"이름\" onChange={onSetName}></Input>\n        <Input type=\"text\" name=\"school\" placeholder=\"학교\" onChange={onSetSchool}></Input>\n        <Input type=\"text\" name=\"graduatedYear\" placeholder=\"졸업년도\" onChange={onSetGraduatedYear}></Input>\n        <Input type=\"text\" name=\"favors\" placeholder=\"관심사\" onChange={onSetFavors}></Input>\n        <ErrorMsg>{errMsg}</ErrorMsg>\n        <Button onClick={onSubmit}>시작하기</Button>\n      </LoginBox>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  text-align: center;\n  padding-top: 50px;\n`;\n\nconst LoginBox = styled.div`\n  display: block;\n  top: 30%;\n  margin: auto;\n  margin-top: 5%;\n  width: 40%;\n  border: 3px solid grey;\n  padding: 10px;\n`;\n\nconst LoginHeader = styled.div`\n  display: block;\n  text-align: center;\n`;\n\nconst Input = styled.input`\n  display: block;\n  margin: 0 auto;\n  margin-top: 10px;\n`;\n\nconst ErrorMsg = styled.p`\n  text-align: center;\n  color: red;\n  font-size: small;\n`;\n\nconst Button = styled.button`\n  display: block;\n  margin: 0 auto;\n  margin-top: 50px;\n`;\n\nexport default LoginPage;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst WordCloud = ({ message }) => {\n  return (\n    <>\n      <MessageBox isUser={message.user}>\n        <Message isUser={message.user}>{message.text}</Message>\n      </MessageBox>\n    </>\n  );\n};\n\nconst MessageBox = styled.div`\n  float: ${(props) => (props.isUser ? \"right\" : \"left\")};\n  width: 100%;\n`;\n\nconst Message = styled.div`\n  background-color: ${(props) => (props.isUser ? \"#4fd2c2\" : \"#ddd\")};\n  float: inherit;\n  margin: 5px;\n  padding: 4px 10px;\n  border-radius: 5px;\n  width: fit-content;\n  overflow-wrap: anywhere;\n`;\n\nexport default WordCloud;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport WordCloud from \"./WordCloud\";\nimport { getChatBot } from \"../../util/ReqMessage\";\n\nconst ChatBot = ({ isOpen, onSetChatbotOpen }) => {\n  const [message, setMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const [isResponsed, setIsResponsed] = useState(true);\n\n  const onClose = () => {\n    onSetChatbotOpen();\n  };\n\n  const onSetMessage = ({ target }) => {\n    setMessage(target.value);\n  };\n\n  const pressEnter = (e) => {\n    if (!isResponsed) return;\n    if (e.keyCode === 13) onPassMessage();\n  };\n\n  const onPassMessage = async () => {\n    if (message === \"\") return;\n\n    setIsResponsed(false);\n    setMessageList((messageList) => [...messageList, { text: message, user: true }]);\n    const response = await getChatBot(message);\n    await setMessageList((messageList) => [...messageList, { text: response, user: false }]);\n    setIsResponsed(true);\n\n    setMessage(\"\");\n\n    // 마지막에서 두번째 채팅으로 고정됨\n    // dom에 접근하는 방식을 useRef 등으로 변경 필요\n    var contextBody = document.getElementById(\"context\");\n    contextBody.scrollTop = contextBody.scrollHeight - 400;\n  };\n\n  const wordCloudList = messageList.map((message, index) => <WordCloud message={message} key={index} />);\n\n  return (\n    <Wrapper isOpen={isOpen}>\n      <TitleBox>\n        <ChatbotTitle>I Loved School 챗봇</ChatbotTitle>\n        <TitleButton onClick={onClose}>X</TitleButton>\n      </TitleBox>\n      <ContextWrap id=\"context\">\n        <ContextBody>{wordCloudList}</ContextBody>\n      </ContextWrap>\n      <InputBox>\n        <MessageInput\n          placeholder=\"챗봇에게 궁금한 점을 물어보세요!\"\n          value={message}\n          onKeyDown={pressEnter}\n          onChange={onSetMessage}\n        ></MessageInput>\n        <InputButton onClick={onPassMessage} disabled={isResponsed ? false : true}>\n          보내기\n        </InputButton>\n      </InputBox>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  visibility: ${(props) => (props.isOpen ? \"visible\" : \"hidden\")};\n  height: 90%;\n  box-shadow: 1px 1px 2px 6px #f0f0f0;\n  border-radius: 10px;\n`;\n\nconst TitleBox = styled.div`\n  width: 100%;\n  height: 10%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #4fd2c2;\n  border-radius: 10px 10px 0 0;\n`;\n\nconst ChatbotTitle = styled.div`\n  margin-left: 8px;\n  color: #f2f2f2;\n`;\n\nconst TitleButton = styled.button`\n  margin-right: 8px;\n  border: none;\n  width: 10%;\n  height: 50%;\n  border-radius: 5px;\n  color: #626466;\n  font-weight: bold;\n`;\n\nconst ContextWrap = styled.div`\n  height: 80%;\n  overflow: scroll;\n`;\n\nconst ContextBody = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  padding: 4px;\n  background-color: #ffffff;\n`;\n\nconst InputBox = styled.div`\n  width: 100%;\n  height: 10%;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  background-color: #f2f2f2;\n`;\n\nconst MessageInput = styled.input`\n  margin-left: 4px;\n  padding-left: 4px;\n  width: 80%;\n  height: 50%;\n  border: none;\n`;\n\nconst InputButton = styled.button`\n  margin-left: 8px;\n  margin-right: 4px;\n  height: 70%;\n  width: 20%;\n  color: white;\n  background: #4fd2c2;\n  border: none;\n  border-radius: 5px;\n  font-size: small;\n`;\n\nexport default ChatBot;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { getUser } from \"../util/ReqMessage\";\nimport ChatBot from \"../components/ChatBot/ChatBot\";\n\nconst MainPage = () => {\n  const { userName } = useParams();\n  const [chatbotOpen, setChatbotOpen] = useState(false);\n  const [userInfo, setUserInfo] = useState({ name: \"\", school: \"\", favors: \"\", graduatedYear: null });\n\n  const getUserHandler = async () => {\n    const user = await getUser(userName);\n    setUserInfo(user);\n  };\n\n  useEffect(() => {\n    getUserHandler();\n  }, []);\n\n  const onSetChatbotOpen = () => {\n    setChatbotOpen(!chatbotOpen);\n  };\n\n  return (\n    <>\n      {userInfo && (\n        <>\n          <Wrapper>\n            <MainBody>\n              <MainLeft>\n                <Profile>\n                  <p>이름: {userInfo.name}</p>\n                  <p>학교: {userInfo.school}</p>\n                  <p>졸업년도: {userInfo.graduatedYear}</p>\n                  <p>관심사: {userInfo.favors}</p>\n                </Profile>\n                <SchoolList>School List</SchoolList>\n              </MainLeft>\n              <MainCenter>Center</MainCenter>\n              <MainRight>\n                <ChatBot isOpen={chatbotOpen} onSetChatbotOpen={onSetChatbotOpen} />\n                <ChatBotButton onClick={onSetChatbotOpen}>CHAT BOT</ChatBotButton>\n              </MainRight>\n            </MainBody>\n            <MainFooter>\n              <div>Footer</div>\n            </MainFooter>\n          </Wrapper>\n        </>\n      )}\n    </>\n  );\n};\n\nconst Wrapper = styled.div`\n  padding: 20px;\n`;\n\nconst MainBody = styled.div`\n  height: 550px;\n  display: flex;\n`;\n\nconst MainLeft = styled.div`\n  padding: 20px;\n  width: 15%;\n  background-color: #dddddd;\n`;\n\nconst Profile = styled.div`\n  margin: 0 0 20px 0;\n  width: 100%;\n  height: 30%;\n  background-color: #ffffff;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  box-sizing: border-box;\n  display: table;\n`;\n\nconst SchoolList = styled.div`\n  width: 100%;\n  height: 60%;\n  background-color: #ffffff;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  box-sizing: border-box;\n`;\n\nconst MainCenter = styled.div`\n  padding: 20px;\n  width: 55%;\n  background-color: #dddddd;\n`;\n\nconst MainRight = styled.div`\n  padding: 20px;\n  width: 25%;\n  background-color: #ffffff;\n  display: block;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst MainFooter = styled.div`\n  padding: 20px;\n  height: 50px;\n  background-color: #4fd2c2;\n`;\n\nconst ChatBotButton = styled.button`\n  height: 10%;\n  color: white;\n  background: #4fd2c2;\n  border: none;\n  border-radius: 5px;\n  margin-top: 14px;\n`;\n\nexport default MainPage;\n","import React from \"react\";\n\nconst ErrorPage = () => {\n  return (\n    <>\n      <img\n        src=\"https://freefrontend.com/assets/img/html-css-404-page-templates/HTML-404-Page-Animated.png\"\n        alt=\"404 error page\"\n        style={{ width: \"100%\" }}\n      />\n    </>\n  );\n};\n\nexport default ErrorPage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport LoginPage from \"./views/LoginPage\";\nimport MainPage from \"./views/MainPage\";\nimport ErrorPage from \"./views/ErrorPage\";\n\nconst App = () => {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={LoginPage} />\n          <Route path=\"/MainPage/:userName\" exact component={MainPage} />\n          <Route component={ErrorPage} />\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}